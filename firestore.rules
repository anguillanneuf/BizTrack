rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if the requesting user is an admin
    function isUserAdmin() {
      // Ensure the user document exists and has the 'admin' role.
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // User profiles:
    // - Authenticated users can read their own profile.
    // - Authenticated users can create their own profile (on signup).
    // - Authenticated users can update their own profile.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
      // Deleting profiles via client is typically disallowed or admin-only.
      // allow delete: if false;
    }

    // Income records:
    // - Users can read their own income records.
    // - Admin users can create, update, delete their own income records.
    match /users/{userId}/incomes/{incomeId} {
      allow read: if request.auth.uid == userId;
      allow create, update, delete: if request.auth.uid == userId && isUserAdmin();
    }

    // Expense records:
    // - Users can read their own expense records.
    // - Admin users can create, update, delete their own expense records.
    match /users/{userId}/expenses/{expenseId} {
      allow read: if request.auth.uid == userId;
      allow create, update, delete: if request.auth.uid == userId && isUserAdmin();
    }

    // Appointment records:
    // - Users can read their own appointments.
    // - Admin users can create, update, delete their own appointments.
    match /users/{userId}/appointments/{appointmentId} {
      allow read: if request.auth.uid == userId;
      allow create, update, delete: if request.auth.uid == userId && isUserAdmin();
    }
  }
}
