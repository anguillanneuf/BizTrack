rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if the requesting user has an 'admin' role
    function isUserAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // User profiles:
    // - Authenticated users can read their own profile.
    // - Authenticated users can create their own profile (on signup).
    // - Authenticated users can update their own profile.
    // - Admin users can read any user profile (for listing purposes, e.g. to get admin UIDs).
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isUserAdmin(request.auth.uid));
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      // No delete for user profiles for now, or make it admin only if needed
    }

    // Subcollections (income, expenses, appointments):
    // - Any authenticated user can read their own data.
    // - Only an admin user can write (create, update, delete) to their own subcollections.
    match /users/{ownerId}/{collection}/{documentId} {
      allow read: if request.auth != null && request.auth.uid == ownerId;
      allow write: if request.auth != null && request.auth.uid == ownerId && isUserAdmin(request.auth.uid);
    }
  }
}
