
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get user data
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // User profiles:
    // - Authenticated users can read their own profile.
    // - Authenticated users can create their own profile doc (e.g., on signup).
    // - Only the user or an admin can update the user's profile.
    // - For simplicity, deletion is disallowed by rules directly.
    // - Any authenticated user can read any user profile (to find admins, etc.)
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      // allow delete: false; // Or specific admin logic if needed
    }

    // Income records:
    // - User can read their own income records.
    // - Any authenticated user can read income records of an admin user.
    // - Only admin users can create, update, or delete their own income records.
    match /users/{ownerUserId}/incomes/{incomeId} {
      allow read: if request.auth != null && (request.auth.uid == ownerUserId || getUserData(ownerUserId).role == 'admin');
      allow create, update, delete: if request.auth != null && request.auth.uid == ownerUserId && getUserData(request.auth.uid).role == 'admin';
    }

    // Expense records:
    // - User can read their own expense records.
    // - Any authenticated user can read expense records of an admin user.
    // - Only admin users can create, update, or delete their own expense records.
    match /users/{ownerUserId}/expenses/{expenseId} {
      allow read: if request.auth != null && (request.auth.uid == ownerUserId || getUserData(ownerUserId).role == 'admin');
      allow create, update, delete: if request.auth != null && request.auth.uid == ownerUserId && getUserData(request.auth.uid).role == 'admin';
    }

    // Appointment records:
    // - User can read their own appointment records.
    // - Any authenticated user can read appointment records of an admin user.
    // - Only admin users can create, update, or delete their own appointment records.
    match /users/{ownerUserId}/appointments/{appointmentId} {
      allow read: if request.auth != null && (request.auth.uid == ownerUserId || getUserData(ownerUserId).role == 'admin');
      allow create, update, delete: if request.auth != null && request.auth.uid == ownerUserId && getUserData(request.auth.uid).role == 'admin';
    }
  }
}
